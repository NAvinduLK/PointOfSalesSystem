/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package computer.sales.system;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NAvi N Du
 */
public class FrontEnd extends javax.swing.JFrame {

    String dbusers = "users", dbCust = "customers", dbSupp = "supplyers", dbItem = "items", dbStock = "stock", dbItemView = "jitemtableview",
            dbStockView = "jstocktableview", dbOrder = "orders", dbOrderIL = "orders_itemlist", dbInvo = "invoice";
    //public javax.swing.JTable userTable;
    ResultSet res = null;
    int qcount, i, selectRow, rowCount, rowId;
    double subTotal = 0, itemSum = 0, totalAmount = 0, bal = 0, disc = 0, discA = 0;
    String id, cmbslct, cateName, iName, systemDate, systemTime;
    boolean a = true;
    DefaultTableModel frontRecode;

    private ActionEvent evt;

    String cname = "";

    /**
     * Creates new form FrontEnd
     */
    public FrontEnd() {
        initComponents();
        this.setExtendedState(FrontEnd.MAXIMIZED_BOTH);
        this.setTitle("JNS POS Solutions : FrontEnd");

        setFrontEndName();

        fillItemIdCmb();
        fillItemNameCmb();
        fillCustNameCmb();
        getInvoiceID();
    }

    public FrontEnd(String msg) {
        initComponents();
        cName.setText(msg.toUpperCase());
        this.setExtendedState(FrontEnd.MAXIMIZED_BOTH);
        this.setTitle("FrontEnd");

        setFrontEndName();

        fillItemIdCmb();
        fillItemNameCmb();
        fillCustNameCmb();
        getInvoiceID();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        frontCompanyName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        frontQty = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        frontPrice = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        frontTot = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        frontCustNameCmb = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        cName = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        frontInvoiceNo = new javax.swing.JTextField();
        jButton35 = new javax.swing.JButton();
        frontItemIdCmb = new javax.swing.JComboBox<>();
        frontItemNameCmb = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        frontTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        frontBal = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        frontCash = new javax.swing.JTextField();
        frontDiscA = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        frontdiscCmb = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        frontTotAmount = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jButton38 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton37 = new javax.swing.JButton();

        jLabel6.setText("jLabel6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setType(java.awt.Window.Type.POPUP);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        frontCompanyName.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        frontCompanyName.setForeground(new java.awt.Color(51, 51, 255));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Item Code");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("Item Name");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("Quntity");

        frontQty.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        frontQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frontQtyActionPerformed(evt);
            }
        });
        frontQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                frontQtyKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("Unit Price");

        frontPrice.setEditable(false);
        frontPrice.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("Total Amount");

        frontTot.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        frontTot.setForeground(new java.awt.Color(255, 51, 51));
        frontTot.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        frontTot.setText("0.00");

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel14.setText("Customer Name");

        frontCustNameCmb.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        frontCustNameCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Customer Name" }));

        jLabel15.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel15.setText("Cashier");

        cName.setEditable(false);
        cName.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cNameActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel16.setText("Invoice No.");

        frontInvoiceNo.setEditable(false);
        frontInvoiceNo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        jButton35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CSS/img/iconfinder_edit-clear_118917.png"))); // NOI18N
        jButton35.setToolTipText("Clear");
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });

        frontItemIdCmb.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        frontItemIdCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Item ID" }));
        frontItemIdCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frontItemIdCmbActionPerformed(evt);
            }
        });

        frontItemNameCmb.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        frontItemNameCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Item Name" }));
        frontItemNameCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frontItemNameCmbActionPerformed(evt);
            }
        });

        jLabel17.setForeground(new java.awt.Color(255, 51, 51));

        jLabel20.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel20.setText("Clear");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(frontCompanyName, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(frontItemIdCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(frontQty, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14)
                        .addGap(14, 14, 14)
                        .addComponent(frontCustNameCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(frontInvoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(frontItemNameCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(frontPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(cName, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton35, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(109, 109, 109)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(frontTot, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(frontCompanyName))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(frontItemIdCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(frontQty, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(frontCustNameCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(frontInvoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(frontItemNameCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(frontPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(cName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton35)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(frontTot, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1364, -1));

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));

        frontTable.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        frontTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item code", "Item name", "Quantity", "Unit price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        frontTable.setRowHeight(30);
        frontTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                frontTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(frontTable);
        if (frontTable.getColumnModel().getColumnCount() > 0) {
            frontTable.getColumnModel().getColumn(0).setMaxWidth(100);
            frontTable.getColumnModel().getColumn(1).setMaxWidth(600);
            frontTable.getColumnModel().getColumn(2).setMaxWidth(150);
            frontTable.getColumnModel().getColumn(3).setMaxWidth(150);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 910, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, -1, 440));

        jPanel4.setBackground(new java.awt.Color(204, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jButton10.setFont(new java.awt.Font("Bahnschrift", 1, 36)); // NOI18N
        jButton10.setText("0");
        jButton10.setAutoscrolls(true);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton16.setBackground(new java.awt.Color(255, 0, 0));
        jButton16.setFont(new java.awt.Font("Bahnschrift", 1, 12)); // NOI18N
        jButton16.setText("Void");
        jButton16.setAutoscrolls(true);
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton11.setFont(new java.awt.Font("Bahnschrift", 1, 36)); // NOI18N
        jButton11.setText("2");
        jButton11.setAutoscrolls(true);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setFont(new java.awt.Font("Bahnschrift", 1, 36)); // NOI18N
        jButton12.setText("3");
        jButton12.setAutoscrolls(true);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Bahnschrift", 1, 36)); // NOI18N
        jButton13.setText("1");
        jButton13.setAutoscrolls(true);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton28.setFont(new java.awt.Font("Bahnschrift", 1, 36)); // NOI18N
        jButton28.setText("4");
        jButton28.setAutoscrolls(true);
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jButton29.setFont(new java.awt.Font("Bahnschrift", 1, 36)); // NOI18N
        jButton29.setText("5");
        jButton29.setAutoscrolls(true);
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jButton31.setFont(new java.awt.Font("Bahnschrift", 1, 36)); // NOI18N
        jButton31.setText("6");
        jButton31.setAutoscrolls(true);
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });

        jButton32.setFont(new java.awt.Font("Bahnschrift", 1, 36)); // NOI18N
        jButton32.setText("7");
        jButton32.setAutoscrolls(true);
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton32ActionPerformed(evt);
            }
        });

        jButton33.setFont(new java.awt.Font("Bahnschrift", 1, 36)); // NOI18N
        jButton33.setText("8");
        jButton33.setAutoscrolls(true);
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33ActionPerformed(evt);
            }
        });

        jButton34.setFont(new java.awt.Font("Bahnschrift", 1, 36)); // NOI18N
        jButton34.setText("9");
        jButton34.setAutoscrolls(true);
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });

        jButton1.setText("Show Stock");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 255, 0));
        jButton2.setText("Payment");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Logout");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton14.setFont(new java.awt.Font("Bahnschrift", 1, 36)); // NOI18N
        jButton14.setText(".");
        jButton14.setAutoscrolls(true);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setFont(new java.awt.Font("Bahnschrift", 1, 36)); // NOI18N
        jButton15.setText("C");
        jButton15.setAutoscrolls(true);
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jButton32, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton33, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton34, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(28, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton33, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton34, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton32, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                            .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 140, 330, 620));

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));
        jPanel2.setForeground(new java.awt.Color(255, 51, 51));

        frontBal.setBackground(new java.awt.Color(255, 255, 255));
        frontBal.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        frontBal.setForeground(new java.awt.Color(0, 0, 255));
        frontBal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        frontBal.setText("0.00");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel10.setText("Balance");

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel11.setText("Cash");

        frontCash.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        frontCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frontCashActionPerformed(evt);
            }
        });
        frontCash.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                frontCashKeyReleased(evt);
            }
        });

        frontDiscA.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        frontDiscA.setText("0.00");
        frontDiscA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frontDiscAActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel12.setText("Discount amount");

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel13.setText("Discount precentage");

        frontdiscCmb.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        frontdiscCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "5", "10", "20", "30" }));
        frontdiscCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frontdiscCmbActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel18.setText("Total Amount to pay");

        frontTotAmount.setBackground(new java.awt.Color(255, 255, 255));
        frontTotAmount.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        frontTotAmount.setForeground(new java.awt.Color(0, 0, 255));
        frontTotAmount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        frontTotAmount.setText("0.00");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(frontCash, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(frontDiscA)
                    .addComponent(frontdiscCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(frontBal, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(frontTotAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(139, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(frontCash, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(frontdiscCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(frontBal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(frontTotAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(frontDiscA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 576, 1050, 180));

        jPanel5.setBackground(new java.awt.Color(204, 255, 255));

        jButton38.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CSS/img/iconfinder_edit-clear_118917.png"))); // NOI18N
        jButton38.setToolTipText("Remove select");
        jButton38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton38ActionPerformed(evt);
            }
        });

        jButton36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CSS/img/delete.png"))); // NOI18N
        jButton36.setToolTipText("Delete all");
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });

        jButton30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CSS/img/iconfinder_sign-add_299068 (1).png"))); // NOI18N
        jButton30.setToolTipText("Add to list");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });

        jButton37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CSS/img/edit.png"))); // NOI18N
        jButton37.setToolTipText("Edit select");
        jButton37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton37ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton37, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                    .addComponent(jButton30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton30, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton37, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton38, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton36, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(923, 140, 130, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //##############################################################################################################################################
    public void setFrontEndName() {

        try {
            DataOb.dbConnects();
            res = DataOb.viewSelected("company_info", "No", "1");

            if (res.next()) {
                frontCompanyName.setText(res.getString("Campany_Name"));
            }

        } catch (Exception ex) {
            System.out.println("err!");
        }
    }

    //########################################################### functions #################################################################
    public void itemCost() {

        subTotal = 0;

        for (int i = 0; i < frontTable.getRowCount(); i++) {

            itemSum = Double.parseDouble(frontTable.getValueAt(i, 3).toString()) * Double.parseDouble(frontTable.getValueAt(i, 2).toString());
            subTotal = subTotal + itemSum;
            double round = Math.round(subTotal * 100) / 100.0;
            System.out.println(round);
            subTotal = round;
        }

        frontTot.setText(String.valueOf(subTotal));
        frontTotAmount.setText(String.valueOf(subTotal));
    }

    public void balanceCal() {

        //cash input balence cal auto
        double cash;

        totalAmount = Double.parseDouble(frontTotAmount.getText());

        if (frontCash.getText().equals("")) {
            cash = 0.00;
        } else {
            cash = Double.parseDouble(frontCash.getText());
        }
        System.out.println(totalAmount + " " + cash);

        if (cash < 1.0) {
            frontBal.setText("0.00");
        } else {

            bal = cash - totalAmount;
            System.out.println(totalAmount);
            double round = Math.round(bal * 100) / 100.0;
            System.out.println(round);
            bal = round;

            frontBal.setText(String.valueOf(bal));
        }

    }

    public void addInvoiceToDB() {

        if (frontTable.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Please select Items do you want to Payment.");
        } else {

            try {
                String cust;
                if (frontCustNameCmb.getSelectedItem().equals("Select Customer Name")) {
                    cust = "";
                } else {
                    cust = frontCustNameCmb.getSelectedItem().toString();
                }

                getDate();

                String arrF1[] = {"Invoice_ID", "In_Date", "In_Time", "In_CustName", "In_Cashier", "In_Cash", "In_Total", "In_Discount", 
                    "In_DisAmount", "In_Balance"};    //Invoice table column names
                String arrV1[] = {frontInvoiceNo.getText(), systemDate, systemTime, cust, cName.getText(), frontCash.getText(), frontTotAmount.getText(),
                    frontdiscCmb.getSelectedItem().toString(), frontDiscA.getText(), frontBal.getText()};    //value of invoice table     

                DataOb.insertData(dbInvo, arrF1, arrV1);  //insert to invoice table
                System.out.println("data insert to Invoice");

                for (int i = 0; i < frontTable.getRowCount(); i++) {

                    String arrF2[] = {"Invoice_ID", "In_Item", "In_Qty"};    //oder_itemlist Table column names
                    String arrV2[] = {frontInvoiceNo.getText(), frontTable.getValueAt(i, 1).toString(), frontTable.getValueAt(i, 2).toString()};
                    //value of InvoiceID / IName / Qty

                    DataOb.insertData("in_itemlist", arrF2, arrV2); //insert data to Orders_itemList table
                    System.out.println("data insert to in_itemlist");

                    String id = frontTable.getValueAt(i, 0).toString();
                    String qty = frontTable.getValueAt(i, 2).toString();

                    updateStockAfterInvoice(id, qty);
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }

        }
    }

    public void updateStockAfterInvoice(String id, String qty) {

        int Q = Integer.parseInt(qty);

        try {
            DataOb.dbConnects();
            res = DataOb.viewSelected(dbStock, "Item_ID", id);

            int tblQty;
            String status;

            if (res.next()) {
                tblQty = res.getInt("Quantity");
                tblQty = tblQty - Q;

                if (tblQty == 0) {
                    status = "OUT OF STOCK";
                } else if (tblQty < 10) {
                    status = "LOW STOCK";
                } else {
                    status = "AVAILABLE";
                }

                String arrF[] = {"Quantity", "Status"};
                String arrV[] = {String.valueOf(tblQty), status};

                DataOb.updateData(dbStock, "Item_ID", id, arrF, arrV, "");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

    }

    public boolean chkItemqty(String id) {
        boolean a = false;

        try {
            DataOb.dbConnects();
            res = DataOb.viewSelected(dbStock, "Item_ID", id);

            int tblQty;
            int eQty = Integer.parseInt(frontQty.getText());
            if (res.next()) {
                tblQty = res.getInt("Quantity");

                if (tblQty < 1) {
                    String state = res.getString("Status");
                    JOptionPane.showMessageDialog(this, "This Item is " + state + "!\nPlease Cancel this Item");

                    a = false;

                } else if (tblQty < 10) {

                    if (tblQty < eQty) {
                        JOptionPane.showMessageDialog(this, "Stock doesn't have enough quantity on this item! Quantity --> " + tblQty);
                        a = false;
                    } else {

                        String state = res.getString("Status");
                        int yn = JOptionPane.showConfirmDialog(this, "This Item is " + state + "!\nDo you want to countine?", "Confrim", JOptionPane.YES_NO_OPTION,
                                JOptionPane.QUESTION_MESSAGE);

                        if (yn == JOptionPane.YES_OPTION) {
                            a = true;
                        } else {
                            a = false;
                        }
                    }

                } else {
                    if (tblQty < eQty) {
                        JOptionPane.showMessageDialog(this, "Stock doesn't have enough quantity on this item! Quantity --> " + tblQty);
                        a = false;
                    } else {
                        a = true;
                    }
                }

            }

        } catch (Exception e) {
        }
        System.out.println(a);
        return a;
    }

//####################################################################################################################################################

    private void jButton38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton38ActionPerformed

        //Front panel remove button
        frontRecode = (DefaultTableModel) frontTable.getModel();

        int removeRow = frontTable.getSelectedRow();

        if (removeRow >= 0) {
            frontRecode.removeRow(removeRow);
        }
        itemCost();
    }//GEN-LAST:event_jButton38ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed

        if (frontItemIdCmb.getSelectedItem().equals("Select Item ID") || frontItemNameCmb.getSelectedItem().equals("Select Item Name")) {

            JOptionPane.showMessageDialog(this, "Please select Item or enter quantity first!");
        } else if (frontQty.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter a Quantity!");
            frontQty.requestFocus();
        } else {
            try {
                DataOb.dbConnects();
                System.out.println("database connection success");

                String id = frontItemIdCmb.getSelectedItem().toString();

                boolean a = chkItemqty(id);

                if (a == true) {
                    res = DataOb.viewSelected(dbItem, "Item_ID", id);

                    if (res.next()) {
                        frontRecode = (DefaultTableModel) frontTable.getModel();
                        frontRecode.addRow(new Object[]{res.getString("Item_ID"), res.getString("IName"), frontQty.getText(),
                            res.getString("IsellingPrice")});

                        frontItemIdCmb.setSelectedIndex(0);
                        frontItemNameCmb.setSelectedIndex(0);
                        frontQty.setText("");
                        frontCash.requestFocus();
                        this.a = false;
                    }

                    itemCost();
                } else {
                    itemCost();
                }

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
        }
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed

        String num = frontQty.getText();

        if (a == true) {
            if (num == "") {
                frontQty.setText(jButton10.getText());
            } else {
                num = frontQty.getText() + jButton10.getText();
                frontQty.setText(num);
                frontQty.requestFocus();
            }
        } else {
            if (num == "") {
                frontCash.setText(jButton10.getText());
                balanceCal();
            } else {
                num = frontCash.getText() + jButton10.getText();
                frontCash.setText(num);
                balanceCal();
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

        String num = frontQty.getText();

        if (a == true) {
            if (num == "") {
                frontQty.setText(jButton11.getText());
            } else {
                num = frontQty.getText() + jButton11.getText();
                frontQty.setText(num);
                frontQty.requestFocus();
            }
        } else {
            if (num == "") {
                frontCash.setText(jButton11.getText());
                balanceCal();
            } else {
                num = frontCash.getText() + jButton11.getText();
                frontCash.setText(num);
                balanceCal();
            }
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        String num = frontQty.getText();

        if (a == true) {
            if (num == "") {
                frontQty.setText(jButton12.getText());
            } else {
                num = frontQty.getText() + jButton12.getText();
                frontQty.setText(num);
                frontQty.requestFocus();
            }
        } else {
            if (num == "") {
                frontCash.setText(jButton12.getText());
                balanceCal();
            } else {
                num = frontCash.getText() + jButton12.getText();
                frontCash.setText(num);
                balanceCal();
            }
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed

        String num = frontQty.getText();

        if (a == true) {
            if (num == "") {
                frontQty.setText(jButton13.getText());
            } else {
                num = frontQty.getText() + jButton13.getText();
                frontQty.setText(num);
                frontQty.requestFocus();
            }
        } else {
            if (num == "") {
                frontCash.setText(jButton13.getText());
                balanceCal();
            } else {
                num = frontCash.getText() + jButton13.getText();
                frontCash.setText(num);
                balanceCal();
            }
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed

        String num = frontQty.getText();

        if (a == true) {
            if (num == "") {
                frontQty.setText(jButton28.getText());
            } else {
                num = frontQty.getText() + jButton28.getText();
                frontQty.setText(num);
                frontQty.requestFocus();
            }
        } else {
            if (num == "") {
                frontCash.setText(jButton28.getText());
                balanceCal();
            } else {
                num = frontCash.getText() + jButton28.getText();
                frontCash.setText(num);
                balanceCal();
            }
        }
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed

        String num = frontQty.getText();

        if (a == true) {
            if (num == "") {
                frontQty.setText(jButton29.getText());
            } else {
                num = frontQty.getText() + jButton29.getText();
                frontQty.setText(num);
                frontQty.requestFocus();
            }
        } else {
            if (num == "") {
                frontCash.setText(jButton29.getText());
                balanceCal();
            } else {
                num = frontCash.getText() + jButton29.getText();
                frontCash.setText(num);
                balanceCal();
            }
        }
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed

        String num = frontQty.getText();

        if (a == true) {
            if (num == "") {
                frontQty.setText(jButton31.getText());
            } else {
                num = frontQty.getText() + jButton31.getText();
                frontQty.setText(num);
                frontQty.requestFocus();
            }
        } else {
            if (num == "") {
                frontCash.setText(jButton31.getText());
                balanceCal();
            } else {
                num = frontCash.getText() + jButton31.getText();
                frontCash.setText(num);
                balanceCal();
            }
        }
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton32ActionPerformed

        String num = frontQty.getText();

        if (a == true) {
            if (num == "") {
                frontQty.setText(jButton32.getText());
            } else {
                num = frontQty.getText() + jButton32.getText();
                frontQty.setText(num);
                frontQty.requestFocus();
            }
        } else {
            if (num == "") {
                frontCash.setText(jButton32.getText());
                balanceCal();
            } else {
                num = frontCash.getText() + jButton32.getText();
                frontCash.setText(num);
                balanceCal();
            }
        }

    }//GEN-LAST:event_jButton32ActionPerformed

    private void jButton33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33ActionPerformed

        String num = frontQty.getText();

        if (a == true) {
            if (num == "") {
                frontQty.setText(jButton33.getText());
            } else {
                num = frontQty.getText() + jButton33.getText();
                frontQty.setText(num);
                frontQty.requestFocus();
            }
        } else {
            if (num == "") {
                frontCash.setText(jButton33.getText());
                balanceCal();
            } else {
                num = frontCash.getText() + jButton33.getText();
                frontCash.setText(num);
                balanceCal();
            }
        }
    }//GEN-LAST:event_jButton33ActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed

        String num = frontQty.getText();

        if (a == true) {
            if (num == "") {
                frontQty.setText(jButton34.getText());
            } else {
                num = frontQty.getText() + jButton34.getText();
                frontQty.setText(num);
                frontQty.requestFocus();
            }
        } else {
            if (num == "") {
                frontCash.setText(jButton34.getText());
                balanceCal();
            } else {
                num = frontCash.getText() + jButton34.getText();
                frontCash.setText(num);
                balanceCal();
            }
        }
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new Login().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        if (a == true) {

        } else {
            if (!frontCash.getText().contains(".")) {
                frontCash.setText(frontCash.getText() + jButton14.getText());
                balanceCal();
            }
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed

        if (a == true) {
            frontQty.setText("");
        } else {
            frontCash.setText("");
            balanceCal();
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        new selectItem().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed

        //front itemid cmb, itemname cmb, custname cmb price txt, qty txt clear
        frontItemIdCmb.setSelectedIndex(0);
        frontItemNameCmb.setSelectedIndex(0);
        frontCustNameCmb.setSelectedIndex(0);
        frontQty.setText("");
        frontPrice.setText("");
        frontTot.setText("0.00");

    }//GEN-LAST:event_jButton35ActionPerformed

    private void cNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cNameActionPerformed

    }//GEN-LAST:event_cNameActionPerformed

    private void frontItemIdCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frontItemIdCmbActionPerformed

        //FrontEnd combobox select item id and set item name
        String key = frontItemIdCmb.getSelectedItem().toString();

        if (key.equals("Select Item ID")) {
            frontItemNameCmb.setSelectedIndex(0);
            frontPrice.setText("");
            frontQty.setText("");

        } else {
            try {

                res = DataOb.viewSelected(dbItem, "Item_ID", key);

                if (res.next()) {
                    frontItemNameCmb.setSelectedItem(res.getString("IName"));
                }

                frontQty.setText("");
                frontQty.requestFocus();
                a = true;
                frontQty.selectAll();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
        }
    }//GEN-LAST:event_frontItemIdCmbActionPerformed

    private void frontItemNameCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frontItemNameCmbActionPerformed

        //FrontEnd combobox select item id and set item name
        String key = frontItemNameCmb.getSelectedItem().toString();

        if (key.equals("Select Item Name")) {
            frontItemIdCmb.setSelectedIndex(0);
            frontPrice.setText("");
            frontQty.setText("");

        } else {
            try {

                res = DataOb.viewSelected(dbItem, "IName", key);

                for (int i = 0; res.next(); i++) {
                    frontItemIdCmb.setSelectedItem(res.getString("Item_ID"));
                    frontPrice.setText(res.getString("IsellingPrice"));

                }
                frontQty.setText("");
                frontQty.requestFocus();
                a = true;
                frontQty.selectAll();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
        }
    }//GEN-LAST:event_frontItemNameCmbActionPerformed

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed

        //front remove all
        frontRecode = (DefaultTableModel) frontTable.getModel();
        frontRecode.setRowCount(0);
        frontItemIdCmb.setSelectedIndex(0);
        frontItemNameCmb.setSelectedIndex(0);
        frontCustNameCmb.setSelectedIndex(0);
        frontQty.setText("");
        frontPrice.setText("");
        frontTot.setText("0.00");
        frontdiscCmb.setSelectedIndex(0);
        frontCash.setText("");
        frontDiscA.setText("0.00");
        frontBal.setText("0.00");
        frontTotAmount.setText("0.00");
        a = true;
    }//GEN-LAST:event_jButton36ActionPerformed

    private void jButton37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton37ActionPerformed

        //front edit button
        frontRecode = (DefaultTableModel) frontTable.getModel();

        frontTable.setValueAt(frontItemIdCmb.getSelectedItem(), frontTable.getSelectedRow(), 0);
        frontTable.setValueAt(frontItemNameCmb.getSelectedItem(), frontTable.getSelectedRow(), 1);
        frontTable.setValueAt(frontQty.getText(), frontTable.getSelectedRow(), 2);
        frontTable.setValueAt(frontPrice.getText(), frontTable.getSelectedRow(), 3);

        itemCost();
        
        frontItemIdCmb.setSelectedIndex(0);
        frontItemNameCmb.setSelectedIndex(0);
        frontQty.setText("");
    }//GEN-LAST:event_jButton37ActionPerformed

    private void frontTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_frontTableMouseClicked
        //Front table select row set valus to jtxtfealds
        frontRecode = (DefaultTableModel) frontTable.getModel();
        selectRow = frontTable.getSelectedRow();

        frontItemIdCmb.setSelectedItem(frontRecode.getValueAt(selectRow, 0).toString());
        frontItemNameCmb.setSelectedItem(frontRecode.getValueAt(selectRow, 1).toString());
        frontQty.setText(frontRecode.getValueAt(selectRow, 2).toString());
        frontPrice.setText(frontRecode.getValueAt(selectRow, 3).toString());

    }//GEN-LAST:event_frontTableMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        //front cach button
        if (frontCash.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter a Cash amount first!");

        } else {

            double cash = Double.parseDouble(frontCash.getText());
            System.out.println(cash);

            totalAmount = Double.parseDouble(frontTotAmount.getText());

            double loss = 0;

            if (cash < Double.parseDouble(frontTotAmount.getText())) {

                loss = totalAmount - cash;
                System.out.println(cash);
                double round = Math.round(loss * 100) / 100.0;
                loss = round;

                JOptionPane.showMessageDialog(this, "You entered cash amount is lower than purchased amount! \n "
                        + "Please add more Rs." + loss + " and Countinue payment.");
                frontCash.requestFocus();
                frontCash.selectAll();

            } else {

                bal = cash - totalAmount;
                double round = Math.round(bal * 100) / 100.0;
                System.out.println(round);
                bal = round;

                frontBal.setText(String.valueOf(bal));

                addInvoiceToDB();

                frontRecode = (DefaultTableModel) frontTable.getModel();

                if (frontCustNameCmb.getSelectedItem().equals("Select Customer Name")) {
                    new InvoicePrint(frontCash.getText().toString(), frontBal.getText().toString(), frontTotAmount.getText().toString(),
                            "", frontInvoiceNo.getText(), cName.getText(), frontDiscA.getText()).setVisible(true);
                } else {
                    new InvoicePrint(frontCash.getText().toString(), frontBal.getText().toString(), frontTotAmount.getText().toString(),
                            frontCustNameCmb.getSelectedItem().toString(), frontInvoiceNo.getText(), cName.getText(), frontDiscA.getText())
                            .setVisible(true);
                }

                jButton36ActionPerformed(evt);
                a = true;
                getInvoiceID();
            }
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void frontdiscCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frontdiscCmbActionPerformed
        //front discount cmb
        disc = Double.parseDouble(frontdiscCmb.getSelectedItem().toString());

        if (disc == 0) {
            frontTotAmount.setText(String.valueOf(subTotal));
            frontDiscA.setText("0.00");
            balanceCal();

        } else {
            totalAmount = subTotal - (subTotal * disc / 100);

            double round = Math.round(totalAmount * 100) / 100.0;
            System.out.println(round);
            totalAmount = round;

            round = Math.round((subTotal - totalAmount) * 100) / 100.0;
            System.out.println(round);
            discA = round;

            frontTotAmount.setText(String.valueOf(totalAmount));
            frontDiscA.setText(String.valueOf(discA));

            balanceCal();
        }

    }//GEN-LAST:event_frontdiscCmbActionPerformed

    private void frontDiscAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frontDiscAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_frontDiscAActionPerformed

    private void frontQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frontQtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_frontQtyActionPerformed

    private void frontQtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_frontQtyKeyPressed
        //front qty enter key
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (frontItemIdCmb.getSelectedItem().equals("Select Item ID") || frontItemNameCmb.getSelectedItem().equals("Select Item Name")) {

                JOptionPane.showMessageDialog(this, "Please select Item or enter quantity first!");
            } else if (frontQty.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Please enter a Quantity!");
            } else {
                try {
                    DataOb.dbConnects();
                    System.out.println("database connection success");

                    String id = frontItemIdCmb.getSelectedItem().toString();

                    boolean a = chkItemqty(id);     //check stock status

                    if (a == true) {
                        res = DataOb.viewSelected(dbItem, "Item_ID", id);

                        if (res.next()) {
                            frontRecode = (DefaultTableModel) frontTable.getModel();
                            frontRecode.addRow(new Object[]{res.getString("Item_ID"), res.getString("IName"), frontQty.getText(),
                                res.getString("IsellingPrice")});

                            frontItemIdCmb.setSelectedIndex(0);
                            frontItemNameCmb.setSelectedIndex(0);
                            frontQty.setText("");
                            frontCash.requestFocus();
                            this.a = false;
                        }

                        itemCost();
                    } else {
                        itemCost();
                    }

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }
            }
        }
    }//GEN-LAST:event_frontQtyKeyPressed

    private void frontCashKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_frontCashKeyReleased
        //cash input balence cal auto

        balanceCal();
    }//GEN-LAST:event_frontCashKeyReleased

    private void frontCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frontCashActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_frontCashActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrontEnd.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrontEnd.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrontEnd.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrontEnd.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrontEnd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField cName;
    private javax.swing.JLabel frontBal;
    private javax.swing.JTextField frontCash;
    private javax.swing.JLabel frontCompanyName;
    private javax.swing.JComboBox<String> frontCustNameCmb;
    private javax.swing.JTextField frontDiscA;
    private javax.swing.JTextField frontInvoiceNo;
    private javax.swing.JComboBox<String> frontItemIdCmb;
    private javax.swing.JComboBox<String> frontItemNameCmb;
    public static javax.swing.JTextField frontPrice;
    private javax.swing.JTextField frontQty;
    public javax.swing.JTable frontTable;
    private javax.swing.JLabel frontTot;
    private javax.swing.JLabel frontTotAmount;
    private javax.swing.JComboBox<String> frontdiscCmb;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

//####################################################################### my functions ###############################################################
    public void getInvoiceID() {
        try {
            DataOb.dbConnects();
            rowId = DataOb.getLastRowID(dbInvo, "Invoice_ID");
            rowId += 1;
            System.out.println(rowId);
            frontInvoiceNo.setText(String.valueOf(rowId));

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }

    private void fillItemIdCmb() {

        try {
            DataOb.dbConnects();
            System.out.println("Database connection success...");
            res = DataOb.viewAll(dbItem);

            while (res.next()) {
                String name = res.getString("Item_ID");
                frontItemIdCmb.addItem(name);
            }

        } catch (Exception ex) {
            System.out.println("category combobox has errors!");

        }

    }

    private void fillItemNameCmb() {

        try {
            DataOb.dbConnects();
            System.out.println("Database connection success...");
            res = DataOb.viewAll(dbItem);

            while (res.next()) {
                String name = res.getString("IName");
                frontItemNameCmb.addItem(name);
            }

        } catch (Exception ex) {
            System.out.println("category combobox has errors!");

        }

    }

    private void fillCustNameCmb() {

        try {
            DataOb.dbConnects();
            System.out.println("Database connection success...");
            res = DataOb.viewAll(dbCust);

            while (res.next()) {
                String name = res.getString("CName");
                frontCustNameCmb.addItem(name);
            }

        } catch (Exception ex) {
            System.out.println("category combobox has errors!");

        }

    }

    public void getDate() {
        Date date = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat sdf1 = new SimpleDateFormat("hh:mm:ss");

        systemDate = sdf.format(date);
        systemTime = sdf1.format(date);
    }
}
